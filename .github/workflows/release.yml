name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CARGO_TERM_COLOR: always

      - name: Package artifact
        shell: bash
        run: |
          BINARY_NAME="rename-cli"
          ARTIFACT_NAME_BASE="rename-cli-${{ matrix.name }}"

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            SOURCE_PATH="target/${{ matrix.target }}/release/${BINARY_NAME}.exe"
            ARTIFACT_PATH="${ARTIFACT_NAME_BASE}.zip"
            7z a "${ARTIFACT_PATH}" "${SOURCE_PATH}"
          else
            SOURCE_PATH="target/${{ matrix.target }}/release/${BINARY_NAME}"
            ARTIFACT_PATH="${ARTIFACT_NAME_BASE}.tar.gz"
            tar -czvf "${ARTIFACT_PATH}" -C "target/${{ matrix.target }}/release" "${BINARY_NAME}"
          fi
          
          echo "ARTIFACT_PATH=${ARTIFACT_PATH}" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ env.ARTIFACT_PATH }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: ls -R artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ github.run_id }}
          files: artifacts/**/*.*
          body: "Automated release of cross-platform binaries."
          prerelease: false
